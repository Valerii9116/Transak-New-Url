type TransakConfig = {
  widgetUrl: string;
  referrer: string;
  widgetWidth?: string;
  widgetHeight?: string;
  containerId?: string;
  themeColor?: string;
};

declare enum Events {
    TRANSAK_WIDGET_INITIALISED = "TRANSAK_WIDGET_INITIALISED",
    TRANSAK_ORDER_CREATED = "TRANSAK_ORDER_CREATED",
    TRANSAK_ORDER_SUCCESSFUL = "TRANSAK_ORDER_SUCCESSFUL",
    TRANSAK_ORDER_CANCELLED = "TRANSAK_ORDER_CANCELLED",
    TRANSAK_ORDER_FAILED = "TRANSAK_ORDER_FAILED",
    TRANSAK_WALLET_REDIRECTION = "TRANSAK_WALLET_REDIRECTION",
    TRANSAK_WIDGET_CLOSE_REQUEST = "TRANSAK_WIDGET_CLOSE_REQUEST",
    TRANSAK_WIDGET_CLOSE = "TRANSAK_WIDGET_CLOSE"
}

declare class Transak {
    #private;
    static readonly EVENTS: typeof Events;
    constructor(transakConfig: TransakConfig);
    static on: (type: keyof typeof Events, cb: (data: unknown) => void) => void;
    init: () => void;
    cleanup: () => void;
    close: () => void;
}

export { Transak, type TransakConfig };
